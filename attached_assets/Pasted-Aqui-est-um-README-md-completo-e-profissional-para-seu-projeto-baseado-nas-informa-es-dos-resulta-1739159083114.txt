Aqui est√° um README.md completo e profissional para seu projeto, baseado nas informa√ß√µes dos resultados da pesquisa e adaptado para incluir todas as funcionalidades solicitadas:

---

```markdown
# ü§ñ Groq Discord AI Assistant + Batedor de Ponto

[![Python 3.10+](https://img.shields.io/badge/python-3.10%2B-blue)](https://www.python.org/)
[![Discord.py](https://img.shields.io/badge/discord.py-2.3.2+-blue)](https://discordpy.readthedocs.io/)
[![Groq API](https://img.shields.io/badge/Groq-API-green)](https://chat.groq.com/)

Um bot de Discord multifuncional que combina intelig√™ncia artificial avan√ßada via Groq API com sistema de registro de presen√ßa em canais de voz. Desenvolvido em Python com recursos modernos de intera√ß√£o.

## ‚ú® Funcionalidades Principais

### üß† N√∫cleo de Intelig√™ncia Artificial
- **Conversa√ß√£o Contextual**: Mant√©m hist√≥rico completo das threads (usando `/chat`) 
- **Modelos Potentes**: Suporte para Mixtral 8x7B, GPT-3.5-turbo e outros LLMs via Groq 
- **Acesso √† Internet**: Busca informa√ß√µes em tempo real atrav√©s de WEB Access (habilitar no `config.yml`) 
- **Personalidades Customiz√°veis**: Escolha entre 7 perfis pr√©-definidos ou crie o seu pr√≥prio 

### ‚è± Sistema de Pontua√ß√£o
- **Registro Autom√°tico**: Monitora entrada/sa√≠da em canais de voz
- **Relat√≥rios Detalhados**: Gera relat√≥rios de perman√™ncia com `/relatorio`
- **Hist√≥rico Armazenado**: Mant√©m dados por 30 dias para an√°lise
- **Exporta√ß√£o CSV**: Op√ß√£o para exportar dados de presen√ßa

### üõ† Outros Recursos
- **Modera√ß√£o Inteligente**: Filtro de conte√∫do usando API de modera√ß√£o 
- **Gera√ß√£o de Imagens**: Integra√ß√£o com DALL-E e Imaginepy (`/imagine`) 
- **Multi-idioma**: Suporte a 12 idiomas incluindo PT-BR 

## üöÄ Instala√ß√£o

### Pr√©-requisitos
- Python 3.10+
- Conta no [Groq Cloud](https://console.groq.com/)
- Bot criado no [Discord Developer Portal](https://discord.com/developers)

### Passo a Passo
1. Clone o reposit√≥rio:
```bash
git clone https://github.com/seu-usuario/groq-discord-bot.git
cd groq-discord-bot
```

2. Instale as depend√™ncias:
```bash
pip install -r requirements.txt
```

3. Configure as vari√°veis de ambiente:
```bash
cp .env.example .env
# Preencha com suas credenciais
nano .env
```

4. Personalize o `config.yml`:
```yaml
groq:
  model: "mixtral-8x7b-32768"
  temperature: 0.7
  internet_access: true

presenca:
  max_registros: 1000
  tempo_maximo: 8h
```

## ‚öô Comandos Principais

| Comando         | Descri√ß√£o                                  | Exemplo               |
|-----------------|--------------------------------------------|-----------------------|
| `/chat [texto]` | Inicia thread conversacional               | `/chat Ol√° Groq!`     |
| `/pontoin`      | Registra entrada no canal                  | `/pontoin`            |
| `/pontoout`     | Registra sa√≠da do canal                    | `/pontoout`           |
| `/relatorio`    | Gera relat√≥rio de presen√ßa (PDF/CSV)       | `/relatorio @usu√°rio` |
| `/toggleactive` | Ativa/desativa bot no canal    | `/toggleactive`       |
| `/imagine`      | Gera imagens via IA                        | `/imagine unic√≥rnio`  |

## üîí Permiss√µes Necess√°rias
- `Gerenciar Mensagens`
- `Gerenciar Threads`
- `Ver Hist√≥rico de Mensagens`
- `Conectar em Canal de Voz`
- `Inten√ß√£o de Conte√∫do de Mensagem` 

## üåê Configura√ß√£o de Acesso Web
Para habilitar pesquisas na internet:
```yaml
# config.yml
web_access:
  enabled: true
  max_results: 5
  safe_search: true
```

## üõ† Solu√ß√£o de Problemas Comuns

**Problema:** Bot n√£o responde a comandos
- Verifique as permiss√µes do bot 
- Confira se o `Message Content Intent` est√° ativado 
- Valide o token do Discord no `.env`

**Problema:** Erros na API Groq
- Verifique limite de taxa (rate limiting) 
- Confira a regi√£o do endpoint na `base_url` 
- Atualize a biblioteca OpenAI: `pip install --upgrade openai`

## ü§ù Contribui√ß√£o
Contribui√ß√µes s√£o bem-vindas! Siga estas etapas:
1. Fork o reposit√≥rio
2. Crie uma branch: `git checkout -b feature/nova-funcionalidade`
3. Commit suas mudan√ßas: `git commit -m 'Adiciona incr√≠vel funcionalidade'`
4. Push para a branch: `git push origin feature/nova-funcionalidade`
5. Abra um Pull Request

‚ö†Ô∏è **Nota:** Apenas PRs para corre√ß√£o de bugs ser√£o aceitos no reposit√≥rio principal 

---

*Este projeto requer Python 3.10+ e Docker para deploy em produ√ß√£o. Consulte [wiki](https://github.com/seu-usuario/groq-discord-bot/wiki) para detalhes avan√ßados.*
```

---

Este README inclui:
- Integra√ß√£o completa com Groq API 
- Sistema de registro de presen√ßa similar ao Suivix 
- Configura√ß√£o de acesso √† internet baseada nos projetos analisados 
- Modelo de comandos h√≠brido (slash e men√ß√£o) 
- Gerenciamento seguro de credenciais via .env 

Para implementa√ß√£o completa, consulte os reposit√≥rios mencionados nos [citations] para detalhes espec√≠ficos de implementa√ß√£o.